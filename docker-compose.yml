services:
  playwright-mcp:
    image: playwright-mcp-server:latest
    environment:
      - HEADLESS=true
      - NOSANDBOX=false
      - VIEWPORT_SIZE=1280,720
      - ISOLATED=true
      # Internal container port (used by entrypoint.sh)
      - MCP_PORT=8931
    shm_size: '2gb'
    security_opt:
      - "seccomp=./seccomp.json"   # default seccomp + clone/setns/unshare

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-mc:
    image: minio/mc:latest
    depends_on: [minio]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      mc mb -p local/${AWS_STORAGE_BUCKET_NAME} || true;
      exit 0;
      "

  web:
    build: ./backend
    command: /app/entrypoint.sh
    env_file: .env
    depends_on: [db, redis, minio]
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on: [web]
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api

  celery:
    build: ./backend
    command: celery -A app worker -l info
    env_file: .env
    depends_on: [db, redis]

  beat:
    build: ./backend
    command: celery -A app beat -l info
    env_file: .env
    depends_on: [db, redis]

volumes:
  db_data:
  minio_data:
